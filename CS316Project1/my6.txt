exist   : Functor
(   : LParen
X   : Var
,   : Comma
[   : LBracket
X   : Var
|   : Bar
T   : Var
]   : RBracket
)   : RParen
.   : Period
exist   : Functor
(   : LParen
X   : Var
,   : Comma
[   : LBracket
Y   : Var
|   : Bar
T   : Var
]   : RBracket
)   : RParen
:-   : If
exist   : Functor
(   : LParen
X   : Var
,   : Comma
T   : Var
)   : RParen
.   : Period
length   : Functor
(   : LParen
[   : LBracket
]   : RBracket
,   : Comma
0   : Int
)   : RParen
.   : Period
length   : Functor
(   : LParen
[   : LBracket
H   : Var
|   : Bar
T   : Var
]   : RBracket
,   : Comma
X   : Var
)   : RParen
:-   : If
length   : Functor
(   : LParen
T   : Var
,   : Comma
Y   : Var
)   : RParen
,   : Comma
X   : Var
is   : Keyword_is
Y   : Var
+   : Add
1   : Int
.   : Period
nth   : Functor
(   : LParen
[   : LBracket
H   : Var
|   : Bar
T   : Var
]   : RBracket
,   : Comma
1   : Int
,   : Comma
H   : Var
)   : RParen
.   : Period
nth   : Functor
(   : LParen
[   : LBracket
H   : Var
|   : Bar
T   : Var
]   : RBracket
,   : Comma
N   : Var
,   : Comma
X   : Var
)   : RParen
:-   : If
N   : Var
>   : Gt
1   : Int
,   : Comma
N1   : Var
is   : Keyword_is
N   : Var
-   : Sub
1   : Int
,   : Comma
nth   : Functor
(   : LParen
T   : Var
,   : Comma
N1   : Var
,   : Comma
X   : Var
)   : RParen
.   : Period
append   : Functor
(   : LParen
[   : LBracket
]   : RBracket
,   : Comma
L   : Var
,   : Comma
L   : Var
)   : RParen
.   : Period
append   : Functor
(   : LParen
[   : LBracket
H   : Var
|   : Bar
K   : Var
]   : RBracket
,   : Comma
L   : Var
,   : Comma
[   : LBracket
H   : Var
|   : Bar
M   : Var
]   : RBracket
)   : RParen
:-   : If
append   : Functor
(   : LParen
K   : Var
,   : Comma
L   : Var
,   : Comma
M   : Var
)   : RParen
.   : Period
